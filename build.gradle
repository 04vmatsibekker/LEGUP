plugins {
    id("java")
    id("application")
    id("checkstyle")
    id("edu.sc.seis.launch4j") version("2.5.3")
    id("kr.motd.sphinx") version("2.10.0")
}

sourceCompatibility = 1.8
version = "2.0.0"
mainClassName = "edu.rpi.legup.Legup"

dependencies {
    implementation("org.jetbrains:annotations:23.0.0")
    implementation("com.google.firebase:firebase-admin:6.3.0")
    implementation("org.apache.httpcomponents:httpclient:4.5.13")

    compile("org.slf4j:slf4j-api:2.0.3")
    compile("org.slf4j:slf4j-simple:2.0.3")

    compile("org.apache.logging.log4j:log4j-api:2.19.0")
    compile("org.apache.logging.log4j:log4j-core:2.19.0")

    testImplementation("junit:junit:4.13.2")
}

task customFatJar(type: Jar) {
    manifest {
        attributes("Implementation-Title": "Legup",
                "Implementation-Version": version,
                "Main-Class": mainClassName,
                "SplashScreen-Image": "edu/rpi/legup/images/Legup/LegupSplash.png")
    }
    archiveName = "Legup.jar"
    baseName = "Legup.jar"
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}

jar {
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
        configurations.runtime.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes("Implementation-Title": "Legup",
                "Implementation-Version": version,
                "Main-Class": mainClassName,
                "SplashScreen-Image": "edu/rpi/legup/images/Legup/LegupSplash.png")
    }
    archiveName = "Legup.jar"
}

/*
 * CREATES NATIVE WINDOWS EXECUTABLE
 * Launches launch4j to create an executable (.exe) file wrapping the jar
 * THIS IS NOT THE INSTALLER
 * Add "icon = "path/to/icon.ico"" to set an icon for the executable
 */
createExe() {
    mainClassName = mainClassName
    outputDir = "../native/windows"
    outfile = "bin/Legup.exe"
    bundledJrePath = "jre"
    bundledJre64Bit = true
    jdkPreference = "preferJre"
    jreMinVersion = "1.8.0"
    jreRuntimeBits = "64/32"
}

/*
 * CREATES NATIVE WINDOWS INSTALLER -- ONLY RUNS ON WINDOWS
 * Runs the shipped version of Inno Setup (6.2) to compile the installer
 * Modify the setup settings in native/windows/legup_inno_setup.iss
 *
 * Modifications are likely required to run the setup script on your computer:
 * Edit the "CHANGE ME" line in native/windows/legup_inno_setup.iss to reflect
 * the path to the Java installation you want to ship inside the executable.
 */
task buildNativeWindows(type: Exec, dependsOn: "createExe") {
    jar
    createExe

    workingDir = "${buildDir}/../native/windows"
    commandLine("cmd", "/c", "make_windows_installer.bat")
}


repositories {
    mavenCentral()
}
